{
	"info": {
		"_postman_id": "561164e7-8ec2-4d90-a35b-f823a9cc68da",
		"name": "TNO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "token: service-account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"access-token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "tno-service-account",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "audience",
									"value": "tno-service-account",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{service-account-secret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{keycloak-scheme}}://{{keycloak-host}}:{{keycloak-port}}/auth/realms/{{realm}}/protocol/openid-connect/token",
							"protocol": "{{keycloak-scheme}}",
							"host": [
								"{{keycloak-host}}"
							],
							"port": "{{keycloak-port}}",
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "token: test user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"access-token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "tno-test",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{test-username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{test-password}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{test-secret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{keycloak-scheme}}://{{keycloak-host}}:{{keycloak-port}}/auth/realms/{{realm}}/protocol/openid-connect/token",
							"protocol": "{{keycloak-scheme}}",
							"host": [
								"{{keycloak-host}}"
							],
							"port": "{{keycloak-port}}",
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "userinfo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{keycloak-scheme}}://{{keycloak-host}}:{{keycloak-port}}/auth/realms/{{realm}}/protocol/openid-connect/userinfo",
							"protocol": "{{keycloak-scheme}}",
							"host": [
								"{{keycloak-host}}"
							],
							"port": "{{keycloak-port}}",
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								"protocol",
								"openid-connect",
								"userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "open id connect endpoints Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{keycloak-scheme}}://{{keycloak-host}}:{{keycloak-port}}/auth/realms/{{realm}}/.well-known/openid-configuration",
							"protocol": "{{keycloak-scheme}}",
							"host": [
								"{{keycloak-host}}"
							],
							"port": "{{keycloak-port}}",
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api-editor",
			"item": [
				{
					"name": "elastic",
					"item": [
						{
							"name": "info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/elastic",
									"protocol": "{{scheme}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{root-path}}",
									"path": [
										"elastic"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "azure-storage",
					"item": [
						{
							"name": "upload",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "key1",
											"value": "value1",
											"type": "text"
										},
										{
											"key": "key2",
											"value": "value2",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/jfoster/Downloads/test.txt"
										}
									]
								},
								"url": {
									"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/azure/upload",
									"protocol": "{{scheme}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{root-path}}",
									"path": [
										"azure",
										"upload"
									]
								}
							},
							"response": []
						},
						{
							"name": "containers/:name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "key1",
											"value": "value1",
											"type": "text"
										},
										{
											"key": "key2",
											"value": "value2",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/jfoster/Downloads/test.txt"
										}
									]
								},
								"url": {
									"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/azure/containers/:name",
									"protocol": "{{scheme}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{root-path}}",
									"path": [
										"azure",
										"containers",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "test-container3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "download",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/azure/download?file=test.txt",
									"protocol": "{{scheme}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{root-path}}",
									"path": [
										"azure",
										"download"
									],
									"query": [
										{
											"key": "file",
											"value": "test.txt"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "cognitive-services",
					"item": [
						{
							"name": "transcribe",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "key1",
											"value": "value1",
											"type": "text"
										},
										{
											"key": "key2",
											"value": "value2",
											"type": "text"
										},
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/jfoster/Downloads/Recording.wav"
										}
									]
								},
								"url": {
									"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/cognitive/transcribe",
									"protocol": "{{scheme}}",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{root-path}}",
									"path": [
										"cognitive",
										"transcribe"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "userinfo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/userinfo",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{root-path}}",
							"path": [
								"userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{scheme}}://{{host}}:{{port}}{{root-path}}/",
							"protocol": "{{scheme}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{root-path}}",
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "app-editor",
			"item": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}