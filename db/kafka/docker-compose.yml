---
version: '3.5'

services:
  zookeeper:
    image: tno:kafka-zookeeper
    restart: on-failure:1
    hostname: zookeeper
    container_name: tno-zookeeper
    build:
      context: db/kafka/zookeeper
    ports:
      - ${KAFKA_ZOOKEEPER_PORT:-50010}:2181
    env_file:
      - db/kafka/zookeeper/.env
    networks:
      - tno

  broker:
    image: tno:kafka-broker
    restart: on-failure:1
    hostname: broker
    container_name: tno-broker
    build:
      context: db/kafka/broker
    env_file:
      - db/kafka/broker/.env
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_BROKER_PORT:-50011}:9101
      - ${KAFKA_BROKER_ADVERTISED_HOST_PORT:-50012}:9092
    networks:
      - tno

  schema-registry:
    image: tno:kafka-schema-registry
    restart: on-failure:1
    hostname: schema-registry
    container_name: tno-schema-registry
    build:
      context: db/kafka/schema-registry
    env_file:
      - db/kafka/schema-registry/.env
    depends_on:
      - broker
    ports:
      - ${KAFKA_SCHMEA_REGISTRY_PORT:-50013}:8081
    networks:
      - tno

  connect:
    image: tno:kafka-schema-connect
    restart: on-failure:1
    hostname: connect
    container_name: tno-connect
    build:
      context: db/kafka/connect
    env_file:
      - db/kafka/connect/.env
    depends_on:
      - broker
      - schema-registry
    ports:
      - ${KAFKA_SCHEMA_CONNECT_PORT:-50014}:8083
    networks:
      - tno

  control-center:
    image: tno:kafka-control-center
    restart: on-failure:1
    hostname: control-center
    container_name: tno-control-center
    build:
      context: db/kafka/control-center
    env_file:
      - db/kafka/control-center/.env
    depends_on:
      - broker
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - ${KAFKA_CONTROL_CENTER_PORT:-50015}:9021
    networks:
      - tno

  ksqldb-server:
    image: tno:kafka-ksqldb-server
    restart: on-failure:1
    hostname: ksqldb-server
    container_name: tno-ksqldb-server
    build:
      context: db/kafka/ksqldb
    env_file:
      - db/kafka/ksqldb/.env
    depends_on:
      - broker
      - connect
    ports:
      - ${KAFKA_KSQLDB_PORT:-50016}:8088
    networks:
      - tno

  ksqldb-cli:
    image: tno:kafka-ksqldb-cli
    restart: on-failure:1
    container_name: tno-ksqldb-cli
    build:
      context: db/kafka/ksqldb-cli
    depends_on:
      - broker
      - connect
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - tno

  ksql-datagen:
    image: tno:kafka-ksql-datagen
    restart: on-failure:1
    hostname: ksql-datagen
    container_name: tno-ksql-datagen
    build:
      context: db/kafka/ksql-datagen
    env_file:
      - db/kafka/ksql-datagen/.env
    depends_on:
      - ksqldb-server
      - broker
      - schema-registry
      - connect
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker:29092 1 40 && \
                       echo Waiting for Confluent Schema Registry to be ready... && \
                       cub sr-ready schema-registry 8081 40 && \
                       echo Waiting a few seconds for topic creation to finish... && \
                       sleep 11 && \
                       tail -f /dev/null'"
    networks:
      - tno

  rest-proxy:
    image: tno:kafka-rest-proxy
    restart: on-failure:1
    hostname: rest-proxy
    container_name: tno-rest-proxy
    build:
      context: db/kafka/rest-proxy
    env_file:
      - db/kafka/rest-proxy/.env
    depends_on:
      - broker
      - schema-registry
    ports:
      - ${KAFKA_REST_PROXY_PORT:-50017}:8082
    networks:
      - tno
